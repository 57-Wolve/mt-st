# This file contains example definitions for different kinds of tape
# devices. If the user agrees with the definitions, they can be used
# in the definition file stinit.def by changing the manufacturer and
# model fields to correspond the real tape device being defined.

# The common definitions that can usually be used
{buffer-writes read-ahead async-writes scsi2logical=1}

# A non-compressing DAT (DDS-1)
# The manufacturer, model, and revision strings can be obtained,
# from the file /proc/scsi/scsi (cat /proc/scsi/scsi).
manufacturer=XYZ model = "UVW1" {
scsi2logical=1 can-bsr can-partitions auto-lock
mode1 blocksize=0
mode2 blocksize=1024 }

# A compressing DAT (DDS-1-DC or DDS-[234])
manufacturer=XYZ model = "UVW2" {
can-bsr can-partitions auto-lock
mode1 blocksize=0 compression=1
mode2 blocksize=1024 compression=1
mode3 blocksize=0 compression=0
mode4 blocksize = 1024 compression=0 }

# A QIC-150 drive
manufacturer=XYZ model="UVW3" {
scsi2logical=0
mode1  # blocksize=512 defined by drive
}

# A QIC-320/525 drive
manufacturer=XYZ model="UVW4" {
defs-for-writes
mode1 blocksize=0 density=0x11     # QIC-320
mode2 blocksize=1024 density=0x11  # QIC-320
mode3 blocksize=512 density=0x10   # QIC-150
}


# Exabyte 8505 and other similar 8 mm helical scan driver
manufacturer=XYZ model = "UVW5" {
can-bsr auto-lock
cleaning=0x080821
mode1 blocksize=0 density=0x8c  # 8500 density, compressing
mode2 blocksize=0 density=0x15  # 8500 density, no compression
mode3 blocksize=0 density=0x90  # 8200 density, compressing
mode4 blocksize=0 density=0x14  # 8200 density, no compression
}

# A reel-to-reel tape with 6250/1600/800 bpi densities
manufacturer=XYZ model = "UVW6" {
can-bsr two-fms
scsi2logical=0
mode1 blocksize=0 density=3   # 6250 bpi
mode2 blocksize=0 density=11  # 1600 bpi
mode3 blocksize=0 density=1   #  800 bpi
}

# DLT2000 / 2000XT
manufacturer="QUANTUM" model = "DLT2000" {
scsi2logical=1
can-bsr
auto-lock=0
two-fms=0
drive-buffering=1
buffer-writes
read-ahead=1
async-writes=1
can-partitions=0
fast-mteom=1
#
# If your stinit supports the timeouts:
timeout=3600 # 1 hour
long-timeout=14400 # 4 hours
#
mode1 blocksize=0 density=0x81	# 10GB + compression on DLTtape III, 15+ with DLTtape IIIXT in 2000XT
mode2 blocksize=0 density=0x80	# 10GB, no compression  on DLTtape III, 15 with DLTtape IIIXT in 2000XT
mode3 blocksize=0 density=0x18  #  6GB, compression not available, on DLTtape III
mode4 blocksize=0 density=0x17  #2.6GB, compression not available, on DLTtape III
}

# DLT4000
manufacturer="QUANTUM" model = "DLT4000" {
scsi2logical=1
can-bsr
auto-lock=0
two-fms=0
drive-buffering=1
buffer-writes
read-ahead=1
async-writes=1
can-partitions=0
fast-mteom=1
#
# If your stinit supports the timeouts:
timeout=3600 # 1 hour
long-timeout=14400 # 4 hours
#
# Drive is backwards compatible, use older modes (e.g. from above) as required
mode1 blocksize=0 density=0x83  # 20GB + compression
mode2 blocksize=0 density=0x82  # 20GB, no compression
mode3 blocksize=0 density=0x81	# 10GB + compression (DLT2000 mode) with DLTtape III, 15+ with DLTtape IIIXT in 2000XT
mode4 blocksize=0 density=0x80	# 10GB, no compression  (DLT2000 mode) with DLTtape III, 15 with DLTtape IIIXT in 2000XT
}

# DLT7000
manufacturer="QUANTUM" model = "DLT7000" {
scsi2logical=1
can-bsr
auto-lock=0
two-fms=0
drive-buffering=1
buffer-writes
read-ahead=1
async-writes=1
can-partitions=0
fast-mteom=1
#
# If your stinit supports the timeouts:
timeout=3600 # 1 hour
long-timeout=14400 # 4 hours
#
# Drive is backwards compatible, use older modes (e.g. from above) as required.
mode1 blocksize=0 density=0x85  # 35GB + compression
mode2 blocksize=0 density=0x84  # 35GB, no compression
mode3 blocksize=0 density=0x83	# 20GB + compression (DLT4000 mode)
mode4 blocksize=0 density=0x82	# 20GB, no compression (DLT4000 mode)
}

# DLT8000
manufacturer="QUANTUM" model = "DLT8000" {
scsi2logical=1
can-bsr=1
auto-lock=0
two-fms=0
drive-buffering=1
buffer-writes
read-ahead=1
async-writes=1
can-partitions=0
fast-mteom=1
#
# If your stinit supports the timeouts:
timeout=3600 # 1 hour
long-timeout=14400 # 4 hours
#
# Drive is backwards compatible to DLT7000, use older modes (e.g. from above) as required. Modes <10GB (<0x19) not supported!
mode1 blocksize=0 density=0x89	# 40GB + compression
mode2 blocksize=0 density=0x88	# 40GB, no compression
mode3 blocksize=0 density=0x85  # 35GB + compression (DLT7000 mode)
mode4 blocksize=0 density=0x84  # 35GB, no compression (DLT7000 mode)
}


# SDLT220
manufacturer="QUANTUM" model = "SuperDLT1" {
scsi2logical=1
can-bsr=1
auto-lock=0
two-fms=0
drive-buffering=1
buffer-writes
read-ahead=1
async-writes=1
can-partitions=0
fast-mteom=1
#
# If your stinit supports the timeouts:
timeout=3600 # 1 hour
long-timeout=14400 # 4 hours
#
# Drive is backwards read compatible to DLT4000/7000/8000. Mode settings are only required for writing, so no need to define any other modes here.
mode1 blocksize=0 density=0x48 compression=1	# 110 GB + compression
mode2 blocksize=0 density=0x48 compression=0	# 110 GB, no ompression
}

# SDLT320
manufacturer="QUANTUM" model = "SDLT320" {
scsi2logical=1
can-bsr=1
auto-lock=0
two-fms=0
drive-buffering=1
buffer-writes
read-ahead=1
async-writes=1
can-partitions=0
fast-mteom=1
#
# If your stinit supports the timeouts:
timeout=3600 # 1 hour
long-timeout=14400 # 4 hours
#
# Drive is backwards write compatible to SDLT220 and read compatible to DLT4000/7000/8000. Mode settings are only required for writing, so we need only the SDL220/320 modes here
mode1 blocksize=0 density=0x49 compression=1	# 160 GB + compression
mode2 blocksize=0 density=0x49 compression=0	# 160 GB, no ompression
mode3 blocksize=0 density=0x48 compression=1	# 110 GB + compression
mode4 blocksize=0 density=0x48 compression=0	# 110 GB, no ompression
}

# SDLT600
manufacturer="QUANTUM" model = "SDLT600" {
scsi2logical=1
can-bsr=1
auto-lock=0
two-fms=0
drive-buffering=1
buffer-writes
read-ahead=1
async-writes=1
can-partitions=0
fast-mteom=1
#
# If your stinit supports the timeouts:
timeout=3600 # 1 hour
long-timeout=14400 # 4 hours
#
# Drive is backwards read compatible to SDLT220/320 and VS160. Mode settings are only required for writing, so we need only the native SDLT600 mode here.
mode1 blocksize=0 density=0x4a compression=1	# 300 GB + compression
mode2 blocksize=0 density=0x4a compression=0	# 300 GB, no ompression
mode3 blocksize=0 density=0x4a compression=1	# 300 GB + compression
mode4 blocksize=0 density=0x4a compression=0	# 300 GB, no ompression
}
